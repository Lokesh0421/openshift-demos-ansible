---
## Deploy Jenkins

# create project
- name: check if jenkins project {{ project_name }} exists
  shell: "{{ openshift_cli }} get project {{ project_name }}"
  register: jenkins_project_result
  ignore_errors: true
  changed_when: false

- name: create jenkins project {{ project_name }}
  shell: "{{ openshift_cli }} new-project {{ project_name }} --display-name='{{ project_display_name }}' --description='{{ project_desc }}'"
  when: jenkins_project_result|failed

- name: assign user {{ project_admin }} as project admin in {{ project_name }}
  shell: "oc adm policy add-role-to-user admin {{ project_admin }} -n {{ project_name }}"
  ignore_errors: true
  when: >
    jenkins_project_result|failed and
    project_admin is defined and
    project_admin is not none and
    project_admin|trim() != ""

- name: annotate jenkins project {{ project_name }}
  shell: "oc annotate --overwrite namespace {{ project_name }} {{ project_annotations }}"
  ignore_errors: true
  when: >
    jenkins_project_result|failed and
    project_annotations is defined and
    project_annotations is not none and
    project_annotations|trim() != ""

# deploy jenkins
- name: check if jenkins exists
  shell: "{{ openshift_cli }} get service jenkins -n {{ project_name }}"
  register: install_jenkins
  ignore_errors: true
  changed_when: false

- name: deploy jenkins persistent from template
  shell: "{{ openshift_cli }} new-app jenkins-persistent -l app=jenkins -p MEMORY_LIMIT=1Gi -n {{ project_name }}"
  when: install_jenkins|failed and not ephemeral

- name: deploy jenkins ephemeral from template
  shell: "{{ openshift_cli }} new-app jenkins-ephemeral -l app=jenkins -p MEMORY_LIMIT=1Gi -n {{ project_name }}"
  when: install_jenkins|failed and ephemeral

- name: set jenkins cpu and mem resources
  shell: "{{ openshift_cli }} set resources dc/jenkins --limits=cpu={{ jenkins_max_cpu }},memory={{ jenkins_max_mem }} --requests=cpu={{ jenkins_min_cpu }},memory={{ jenkins_min_mem }} -n {{ project_name }}"
  when: install_jenkins|failed
